#!/usr/bin/env python3
"""
Rate-Limited News Fetcher —Å –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.py –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
"""
import time
import json
from datetime import datetime
from typing import Dict, Any

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã
from clients.newsapi_client import NewsApiClient
from clients.polygon_client import PolygonClient  
from clients.finnhub_client import FinnHubClient
from clients.fmp_client import FMPClient
from clients.newsdata_client import NewsDataClient

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
from config import API_KEYS, RATE_LIMITS, SEARCH_QUERIES, GENERAL_SETTINGS


class ConfigurableNewsFetcher:
    """–°–±–æ—Ä—â–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""

    def __init__(self):
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Configurable News Fetcher...")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç—ã
        self.clients = {}
        self._init_clients()

        # –°—á–µ—Ç—á–∏–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
        self.request_counts = {
            'newsapi': 0,
            'polygon': 0, 
            'finnhub': 0,
            'fmp': 0,
            'newsdata': 0
        }

        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã (–¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤)
        self.last_requests = {
            'newsapi': datetime.min,
            'polygon': datetime.min,
            'finnhub': datetime.min, 
            'fmp': datetime.min,
            'newsdata': datetime.min
        }

        print(f"‚úÖ –ì–æ—Ç–æ–≤! –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(self.clients)}")
        self._show_search_config()

    def _init_clients(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ API"""

        if API_KEYS["newsapi"] != "YOUR_NEWSAPI_KEY_HERE":
            try:
                self.clients["newsapi"] = NewsApiClient(API_KEYS["newsapi"])
                print("‚úÖ NewsAPI –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ 60 —Å–µ–∫)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ NewsAPI: {e}")

        if API_KEYS["polygon"] != "YOUR_POLYGON_KEY_HERE":
            try:
                self.clients["polygon"] = PolygonClient(API_KEYS["polygon"])
                print("‚úÖ Polygon –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ 12 —Å–µ–∫)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ Polygon: {e}")

        if API_KEYS["finnhub"] != "YOUR_FINNHUB_KEY_HERE":
            try:
                self.clients["finnhub"] = FinnHubClient(API_KEYS["finnhub"])
                print("‚úÖ FinnHub –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ (–∫–∞–∂–¥—É—é 1 —Å–µ–∫)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ FinnHub: {e}")

        if API_KEYS["fmp"] != "YOUR_FMP_KEY_HERE":
            try:
                self.clients["fmp"] = FMPClient(API_KEYS["fmp"])
                print("‚úÖ FMP –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ 6 –º–∏–Ω)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ FMP: {e}")

        if API_KEYS["newsdata"] != "YOUR_NEWSDATA_KEY_HERE":
            try:
                self.clients["newsdata"] = NewsDataClient(API_KEYS["newsdata"])
                print("‚úÖ NewsData –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ (–∫–∞–∂–¥—ã–µ 8 –º–∏–Ω)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ NewsData: {e}")

    def _show_search_config(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞"""
        print("\nüîç –ù–ê–°–¢–†–û–ô–ö–ò –ü–û–ò–°–ö–ê –ò–ó –ö–û–ù–§–ò–ì–ê:")
        print("-" * 50)

        for api_name, settings in SEARCH_QUERIES.items():
            if api_name in self.clients:
                print(f"üìä {api_name.upper()}:")

                if api_name == "newsapi":
                    print(f"   –ó–∞–ø—Ä–æ—Å: {settings['main_query']}")
                    print(f"   –Ø–∑—ã–∫: {settings['language']}")
                    print(f"   –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {settings['sort_by']}")

                elif api_name == "polygon":
                    print(f"   –¢–µ—Ä–º–∏–Ω—ã: {', '.join(settings['search_terms'])}")
                    print(f"   –õ–∏–º–∏—Ç: {settings['limit']}")

                elif api_name == "finnhub":
                    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(settings['categories'])}")
                    print(f"   –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {settings['default_category']}")

                elif api_name == "fmp":
                    print(f"   –¢–µ—Ä–º–∏–Ω—ã: {', '.join(settings['search_terms'])}")
                    print(f"   –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {settings['page_size']}")

                elif api_name == "newsdata":
                    print(f"   –ó–∞–ø—Ä–æ—Å: {settings['query']}")
                    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(settings['categories'])}")
                    print(f"   –†–∞–∑–º–µ—Ä: {settings['size']}")

                print()

    def can_make_request(self, api_name: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–Ω–æ –ª–∏ –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API"""
        now = datetime.now()
        last_request = self.last_requests[api_name]
        seconds_passed = (now - last_request).total_seconds()

        return seconds_passed >= RATE_LIMITS.get(api_name, 60)

    def fetch_from_api(self, api_name: str) -> Dict[str, Any]:
        """–ó–∞–ø—Ä–æ—Å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É API —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""

        if api_name not in self.clients:
            return {"source": api_name, "error": "–ö–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"}

        if not self.can_make_request(api_name):
            return {"source": api_name, "error": "Rate limit - –∂–¥–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª"}

        try:
            print(f"üì° –ó–∞–ø—Ä–æ—Å –∫ {api_name.upper()}...")

            if api_name == "newsapi":
                config = SEARCH_QUERIES["newsapi"]
                result = self.clients["newsapi"].get_everything(
                    q=config["main_query"],
                    language=config["language"],
                    sort_by=config["sort_by"], 
                    page_size=GENERAL_SETTINGS["default_page_size"]
                )

            elif api_name == "polygon":
                config = SEARCH_QUERIES["polygon"]
                result = self.clients["polygon"].get_market_news(
                    limit=config["limit"]
                )

            elif api_name == "finnhub":
                config = SEARCH_QUERIES["finnhub"]
                result = self.clients["finnhub"].general_news(
                    category=config["default_category"]
                )

            elif api_name == "fmp":
                config = SEARCH_QUERIES["fmp"]
                result = self.clients["fmp"].get_general_news(
                    page=0, 
                    size=config["page_size"]
                )

            elif api_name == "newsdata":
                config = SEARCH_QUERIES["newsdata"]
                result = self.clients["newsdata"].latest_news(
                    q=config["query"],
                    category=config["categories"][0] if config["categories"] else None,
                    language=config["languages"][0] if config["languages"] else "en",
                    size=config["size"]
                )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            self.request_counts[api_name] += 1
            self.last_requests[api_name] = datetime.now()

            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π
            if api_name == "newsapi":
                count = result.get("totalResults", 0) if isinstance(result, dict) else 0
            elif api_name == "polygon":
                count = result.get("count", 0) if isinstance(result, dict) else 0
            elif api_name in ["finnhub", "fmp"]:
                count = len(result) if isinstance(result, list) else 0
            elif api_name == "newsdata":
                count = result.get("totalResults", 0) if isinstance(result, dict) else 0
            else:
                count = 0

            response = {
                "source": api_name,
                "timestamp": datetime.now().isoformat(),
                "request_number": self.request_counts[api_name],
                "articles_count": count,
                "search_config": SEARCH_QUERIES.get(api_name, {}),
                "raw_data": result
            }

            print(f"    ‚úÖ {api_name.upper()}: –ø–æ–ª—É—á–µ–Ω–æ {count} –Ω–æ–≤–æ—Å—Ç–µ–π (–∑–∞–ø—Ä–æ—Å #{self.request_counts[api_name]})")
            return response

        except Exception as e:
            print(f"    ‚ùå {api_name.upper()}: {str(e)}")
            return {
                "source": api_name,
                "timestamp": datetime.now().isoformat(),
                "error": str(e)
            }

    def save_result(self, result: Dict[str, Any]):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"""
        if not GENERAL_SETTINGS.get("save_results", True):
            return

        try:
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            source = result.get("source", "unknown")
            filename = f"news_{source}_{timestamp}.json"

            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(result, f, ensure_ascii=False, indent=2)

            if GENERAL_SETTINGS.get("show_progress", True):
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

    def print_stats(self):
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤"""
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("-" * 50)

        for api_name, count in self.request_counts.items():
            if api_name in self.clients:
                last_req = self.last_requests[api_name]
                if last_req != datetime.min:
                    mins_ago = (datetime.now() - last_req).total_seconds() / 60
                    print(f"üìà {api_name.upper()}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–π {mins_ago:.1f} –º–∏–Ω –Ω–∞–∑–∞–¥)")
                else:
                    print(f"üìà {api_name.upper()}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤ (–µ—â–µ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª—Å—è)")

        total = sum(self.request_counts.values())
        print(f"\nüî¢ –í–°–ï–ì–û –ó–ê–ü–†–û–°–û–í: {total}")
        print("-" * 50)

    def run_cycle(self):
        """–û–¥–∏–Ω —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö API"""
        if GENERAL_SETTINGS.get("show_progress", True):
            print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ API - {datetime.now().strftime('%H:%M:%S')}")

        apis = ['newsapi', 'polygon', 'finnhub', 'fmp', 'newsdata']
        requests_made = 0

        for api_name in apis:
            if api_name in self.clients:
                if self.can_make_request(api_name):
                    result = self.fetch_from_api(api_name)

                    if "error" not in result:
                        self.save_result(result)
                        requests_made += 1

                    # –ú–∞–ª–µ–Ω—å–∫–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                    time.sleep(0.5)
                else:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å
                    if GENERAL_SETTINGS.get("show_progress", True):
                        last_req = self.last_requests[api_name]
                        if last_req != datetime.min:
                            seconds_left = RATE_LIMITS[api_name] - (datetime.now() - last_req).total_seconds()
                            if seconds_left > 0:
                                if seconds_left > 60:
                                    print(f"‚è∞ {api_name.upper()}: —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {seconds_left/60:.1f} –º–∏–Ω")
                                else:
                                    print(f"‚è∞ {api_name.upper()}: —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ {seconds_left:.0f} —Å–µ–∫")

        if requests_made == 0 and GENERAL_SETTINGS.get("show_progress", True):
            print("‚è∞ –í—Å–µ API –Ω–∞ cooldown")
        elif requests_made > 0:
            print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ {requests_made} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —ç—Ç–æ–º —Ü–∏–∫–ª–µ")

    def run_forever(self):
        """–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª"""
        print("\nüîÑ –ó–ê–ü–£–°–ö –ù–ï–ü–†–ï–†–´–í–ù–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥...")
        print("Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n")

        try:
            cycle_count = 0
            while True:
                cycle_count += 1

                if GENERAL_SETTINGS.get("show_progress", True):
                    print(f"\n>>> –¶–ò–ö–õ #{cycle_count}")

                self.run_cycle()

                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Ü–∏–∫–ª–æ–≤
                if cycle_count % 10 == 0:
                    self.print_stats()

                # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
                if GENERAL_SETTINGS.get("show_progress", True):
                    print("\n‚è∞ –ü–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥...")
                time.sleep(5)

        except KeyboardInterrupt:
            print("\n\nüõë –û–°–¢–ê–ù–û–í–ö–ê")
            self.print_stats()

    def show_schedule(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"""
        print("\nüìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ó–ê–ü–†–û–°–û–í:")
        print("=" * 50)
        for api_name, interval in RATE_LIMITS.items():
            if api_name in self.clients:
                if interval >= 60:
                    print(f"üì∞ {api_name.upper():<12} –∫–∞–∂–¥—ã–µ {interval//60} –º–∏–Ω—É—Ç")
                else:
                    print(f"üì∞ {api_name.upper():<12} –∫–∞–∂–¥—ã–µ {interval} —Å–µ–∫—É–Ω–¥")
        print("=" * 50)
        print("‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥\n")


def main():
    print("=" * 60)
    print("üì∞ CONFIGURABLE NEWS FETCHER")
    print("=" * 60)

    fetcher = ConfigurableNewsFetcher()

    if not fetcher.clients:
        print("\n‚ùå –ù–µ—Ç API –∫–ª—é—á–µ–π! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ config.py")
        return

    fetcher.show_schedule()

    print("–†–µ–∂–∏–º—ã:")
    print("1 - –û–¥–∏–Ω —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("2 - –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ (–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø)")
    print("3 - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞")

    choice = input("\n–í—ã–±–æ—Ä (1-3): ").strip()

    if choice == "1":
        fetcher.run_cycle()
        fetcher.print_stats()
    elif choice == "3":
        fetcher._show_search_config()
    else:
        fetcher.run_forever()


if __name__ == "__main__":
    main()
